demo()
covariate <- sample(0:1, 100, replace=TRUE)
exposure <- runif(100,0,1)+(0.3*covariate)
outcome <- 2.0+(0.5*exposure)+(0.25*covariate)
covariate
exposure
runif(100,0,1)
help runif
help
help(runif)
exposure <- runif(100,0,1)+(0.3*covariate)
exposure
outcome
lm
lm(outcome~exposure)
lm(outcome~exposure)
lm(outcome~exposure+covariate)
covariate <- sample(0:1, 100, replace=TRUE)
exposure <- runif(100,0,1)+(0.3*covariate)
outcome <- 2.0+(0.5*exposure)+(0.25*covariate)
lm(outcome~exposure+covariate)
lm(outcome~exposure)
lm(outcome~exposure)
lm(outcome~exposure)
lm(outcome~exposure+covariate)
logit
install.packages('swirl')
library('swirl')
is()
is()
ls()
rm(list=ls())
ls()
swirl()
q()
swirl()
library('swirl')
swirl()
x = 5
x
outcome = runif(100, 0, 1)
outcome
lm
lm()
lm(x~exposure)
exposure <- runif(10,0,1)
x <- c(1,2,3,4,5,6,7,8,9,10)
fit = lm(x~exposure)
fit
attributes(fit)
fit$coefficients
fit$residuals
testing <- read.table("testing_phase.dat", header=TRUE,
testing
training
sep=",", row.names="id");
training <- read.table("training_phase.dat", header=TRUE,
sep=",", row.names="id")
training <- read.table("./training_phase.dat", header=TRUE,
sep=",", row.names="id")
training <- read.table("C:/Users/Maxim/Desktop/p2data/rdata/training_phase.dat", header=TRUE,
sep=",", row.names="id")
training <- read.table("C:/Users/Maxim/Desktop/p2data/rdata/training_phase.dat", header=TRUE,
sep=",", row.names="id")
training <- read.table("C:/Users/Maxim/Desktop/p2data/rdata/training_phase.dat", header=TRUE,
sep=","); # , row.names="id"
training
Sys.getenv('PATH')
Sys.getenv('PATH')
library(shiny)
library(shinyFiles)
runGitHub("SAM", "MikeJSeo")
library(shiny)
library(shinyFiles)
runGitHub("SAM", "MikeJSeo")
source("http://bioconductor.org/biocLite.R")
biocLite("impute")
library(shiny)
library(shinyFiles)
runGitHub("SAM", "MikeJSeo")
install.packages('Rserve')
install.packages(c('e1071', 'parallel', 'colorRamps'))
source("http://bioconductor.org/biocLite.R")
biocLite("preprocessCore")
library(Rserve)
version
library("e1071", lib.loc="C:/dev/R/R-3.1.2/library")
biocLite("ALL")
version
source("http://www.bioconductor.org/biocLite.R")
biocLite("ALL")
library("ALL")
data('ALL')
eset <- ALL[, ALL$mol.biol %in% c("BCR/ABL", "ALL1/AF4")]
head(eset)
heatmap(exprs(eset[1:100,]))
setwd('C:\Users\maxim\Desktop\code\hammer\infil')
setwd('C:\\Users\\maxim\\Desktop\\code\\hammer\\infil')
read.table('LM22.txt')
lm22=read.table('LM22.txt', sep='\t')
head(lm22)
heatmap(exprs(lm22))
heatmap(lm22)
showFunctions('heatmap')
head(lm22)
lm22=read.table('LM22.txt', sep='\t', header=T)
head(lm22)
lm22=read.table('LM22.txt', sep='\t', header=T, row.names='Gene.symbol')
head(lm22)
heatmap(lm22)
read.exprs
read.exprs()
library(affy)
read.exprs()
write.exprs()
ExpressionSet(lm22)
ExpressionSet(assayData=lm22)
heatmap(as.matrix(lm22))
heatmap(as.matrix(lm22))
png('lm22.png')
heatmap(as.matrix(lm22))
dev.off()
abbas=read.table('GSE11103_matrix_pure.txt', sep='\t', header=T)
head(abbas)
abbas=read.table('GSE11103_matrix_pure.txt', sep='\t', header=T, row.names='X.Sample_title')
head(abbas)
heatmap(as.matrix(abbas))
abbas=read.table('GSE11103_matrix_pure.txt', sep='\t', header=T, row.names='X.Sample_title')
heatmap(as.matrix(abbas))
heatmap
dist
hclust
